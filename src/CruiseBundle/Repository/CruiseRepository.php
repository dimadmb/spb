<?php

namespace CruiseBundle\Repository;

/**
 * CruiseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CruiseRepository extends \Doctrine\ORM\EntityRepository
{

	public function findByDateTime($date,$direction) 
	{
		$dateTime = date("Y-m-d H:i:s",strtotime(" +1 hour"));
		
		$str = "SELECT c
			FROM CruiseBundle:Cruise c
			WHERE CONCAT(c.date , ' ' , c.time)  >= :dateTime		
			AND c.active = 1
			AND c.date = :date
			AND c.direction = :direction
			ORDER BY  c.time ASC
			";
   		$q = $this->_em->createQuery($str)
		->setParameter('date', $date)
		->setParameter('direction', $direction)
		->setParameter('dateTime', $dateTime)
		;
   		return $q->getResult();		
	}

	//  получаем даты с активными круизами
	public function getDays() {
		$dateTime = date("Y-m-d H:i:s",strtotime(" +1 hour"));
		
		$str = "SELECT c
			FROM CruiseBundle:Cruise c
			WHERE CONCAT(c.date , ' ' , c.time)  >= :dateTime				
			AND c.active = 1
			GROUP BY c.date
			ORDER BY c.date
			";
   		$q = $this->_em->createQuery($str)
		->setParameter('dateTime', $dateTime)
		;
   		return $q->getResult();
	}	
	
	
	//  получаем дату ближайшего круиза
	public function getNearestDate() {
		
		$dateTime = date("Y-m-d H:i:s",strtotime(" +1 hour"));
		
		$str = "SELECT c
			FROM CruiseBundle:Cruise c
			WHERE CONCAT(c.date , ' ' , c.time)   >= :dateTime		
			AND c.active = 1
			GROUP BY c.date
			ORDER BY c.date
			";
   		$q = $this->_em->createQuery($str)
		->setParameter('dateTime', $dateTime)
		;
		$q->setMaxResults(1);
   		return $q->getOneOrNullResult();
	}	
	
	// получим все продажи по круизу
	public function findOneOrderById($id)
	{
		$str = "SELECT c,oc,oco
			FROM CruiseBundle:Cruise c
			LEFT JOIN c.orderCruise oc
			LEFT JOIN oc.ordering oco
			
			WHERE c.id = $id
			AND oco.status = 1
			";	
   		$q = $this->_em->createQuery($str);
   		return $q->getOneOrNullResult();	/// осталось присоединить Ordering		
	}
	
	
}
